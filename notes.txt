package.json Notes:

Your Scripts section should have the following, so that you can easily run tests locally and in your CI

  "scripts": {
    "start": "node index.js",
    "lint": "eslint **/*.js",
    "test": "jest --verbose --coverage",
    "test-watch": "jest --watchAll --verbose --coverage"
},

------------------------------

If you are creating a module to deploy at NPM, you'll want a "bin" section that identifies the name of the global command to run and your .js file that runs when called.

"bin": {
    "fetch": "index.js"
}

Additionally, that file should have as it's first line, so that it'll run without having to type "node filename.js" every time

#!/usr/bin/env node

Example auth0 info

const { auth } = require('express-openid-connect');

const config = {
  authRequired: false,
  auth0Logout: true,
  secret: 'UrXL2FkIkWm9gIBfRyxuFVp2_sQMw1udfTp6fx3KEI2xUvPX46It78XeHs6n1P0j'
  baseURL: 'http://localhost:3000',
  clientID: '9B1QmVWu54txcQa88zEMwZl0Q6jjfs1C',
  issuerBaseURL: 'https://lab-12a.us.auth0.com'
};

// auth router attaches /login, /logout, and /callback routes to the baseURL
app.use(auth(config));

// req.isAuthenticated is provided from the auth router
app.get('/', (req, res) => {
  res.send(req.oidc.isAuthenticated() ? 'Logged in' : 'Logged out');
});

auth0 user profile 

const { requiresAuth } = require('express-openid-connect');

app.get('/profile', requiresAuth(), (req, res) => {
  res.send(JSON.stringify(req.oidc.user));
});